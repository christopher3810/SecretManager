version: '3.8'

services:

  # Postgres service
  postgres:
    image: postgres:13.4
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Redis service
  redis:
    image: redis:6.2.5
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    volumes:
      - redisdata:/data
    ports:
      - "6379:6379"

  # Hashicorp Vault service
  vault:
    image: hashicorp/vault:1.8.4
    container_name: vault
    restart: always
    environment:
      VAULT_ADDR: http://localhost:8200
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK
    entrypoint:
      - "sh"
      - "-ec"
      - "vault server -dev -dev-root-token-id=root"

  # Spring Boot service
  user-management:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: user-management
    restart: always
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_REDIS_HOST: ${REDIS_HOST}
      SPRING_REDIS_PORT: ${REDIS_PORT}
      SPRING_REDIS_PASSWORD: ${REDIS_PASSWORD}
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: root
    depends_on:
      - postgres
      - redis
      - vault
    ports:
      - "8080:8080"

  # NGINX service
  api-gateway:
    image: nginx:1.21.3-alpine
    container_name: api-gateway
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - user-management

volumes:
  pgdata:
  redisdata: